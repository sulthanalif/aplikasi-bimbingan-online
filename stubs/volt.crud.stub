<?php

use Mary\Traits\Toast;
use Livewire\Volt\Component;
use Livewire\WithPagination;
use App\Traits\CreateOrUpdate;
use Livewire\Attributes\Title;
use Illuminate\Pagination\LengthAwarePaginator;

new #[Title('Title_Ubah')] class extends Component {
    use Toast, CreateOrUpdate, WithPagination;

    public string $search = '';
    public bool $modal = false;
    public int $perPage = 10;
    public array $sortBy = ['column' => 'created_at', 'direction' => 'desc'];

    public $pageModel;

    //var
    public string $name = '';
    public bool $status = true;

    public function mount()
    {
        //
    }

    public function save(): void
    {
        $this->setModel(new $this->pageModel);

        $this->saveOrUpdate(
            validationRules: [
                'name' => 'required|string',
            ],
        );

        $this->modal = false;
    }

    public function delete(): void
    {
        $this->setModel(new $this->pageModel);

        $this->deleteData();

        $this->modal = false;
    }

    public function datas(): LengthAwarePaginator
    {
        return $this->pageModel->query()
            ->where(function ($query) {
                $query->where('name', 'like', "%{$this->search}%");
            })
            ->orderBy($this->sortBy['column'], $this->sortBy['direction'])
            ->paginate($this->perPage);
    }

    public function headers(): array
    {
        return [
            ['key' => 'name', 'label' => 'Nama', 'class' => 'w-64'],
            ['key' => 'status', 'label' => 'Status', 'class' => 'w-64'],
            ['key' => 'created_at', 'label' => 'Dibuat pada', 'class' => 'w-64'],
        ];
    }

    public function with(): array
    {
        return [
            'datas' => $this->datas(),
            'headers' => $this->headers()
        ];
    }

}; ?>

@script
    <script>
        $js('create', () => {
            $wire.modal = true;
            $wire.recordId = null;
            $wire.name = '';
            $wire.status = true;
        });

        $js('edit', (data) => {
            $wire.modal = true;
            $wire.recordId = data.id;
            $wire.name = data.name;
            $wire.status = data.status == 1;
        });
    </script>
@endscript

<div>
    <x-header title="Title_Ubah" separator>
        <x-slot:actions>
            <x-button label="Create" @click="$js.create" responsive class="btn-primary" icon="fas.plus" />
        </x-slot:actions>
    </x-header>

    <div class="flex justify-end items-center gap-5">
        <x-input placeholder="Search..." wire:model.live="search" clearable icon="o-magnifying-glass" />
    </div>

    <!-- TABLE  -->
    <x-card class="mt-4" shadow>
        <x-table :headers="$headers" :rows="$datas" :sort-by="$sortBy" per-page="perPage" :per-page-values="[10, 25, 50, 100]"
            with-pagination @row-click="$js.edit($event.detail)"
            show-empty-text empty-text="Tidak Ada Data!">
            @scope('cell_created_at', $data)
                <x-date-formatter :date="$data->created_at" format="d F Y" />
            @endscope
        </x-table>
    </x-card>

    <x-modal wire:model="modal" title="Form Title_Ubah" box-class="w-full h-fit max-w-[600px]" without-trap-focus>
        <x-form wire:submit="save" no-separator>

            <div>
                <x-input label="Name" wire:model="name"  />
            </div>

            <div class="mt-3">
                <x-toggle label="Status" wire:model="status" hint="Nyala jika aktif" />
            </div>

            <x-slot:actions>
                <div x-data="{buttonDelete: false}" x-effect="buttonDelete = $wire.recordId != null">
                    <x-button x-show="buttonDelete" label="Delete" wire:click="delete" class="btn-error" wire:confirm="Are you sure?" />
                </div>
                <x-button label="Save" type="submit" spinner="save" class="btn-primary" />
            </x-slot:actions>
        </x-form>
    </x-modal>
</div>
